function : "fn" _ws string _ws "{" statement* "}" "\n"
statement : let
          | loop
          | if_stmt
          | while_stmt
          | match_stmt
          | expr _ws ";" _ws
let : _ws "let" _ws string _ws "=" _ws expr _ws ";" _ws
loop : _ws "loop" _ws "{" _ws statement* _ws "}" _ws
if_stmt : _ws "if" _ws expr _ws "{" _ws statement* _ws "}" _ws
while_stmt : _ws "while" _ws expr _ws "{" _ws statement* _ws "}" _ws
match_stmt : _ws "match" _ws expr _ws "{" _ws statement*  _ws "}" _ws
expr : term (("+" | "-") expr)?
term : factor (("*" | "/") term)?
factor : number | "(" expr ")"
number : /[0-9]+/
string : /[A-Za-z]+/
_ws : (" " | "\n")*